{"ast":null,"code":"import authAPI from \"../api/api.js\";\nconst SET_AUTH_USER = \"SET_AUTH_USER\";\nconst RESET_USER_AUTH_DATA = \"RESET_USER_AUTH_DATA\";\nconst GET_CAPTCHA_URL_SUCCESS = \"GET_CAPTCHA_URL_SUCCESS\";\nconst SET_ACCESS_TOKEN = \"SET_ACCESS_TOKEN\";\nconst SET_REFRESH_TOKEN = \"SET_REFRESH_TOKEN\";\nlet initialState = {\n  username: null,\n  loglast_name: null,\n  last_name: null,\n  email: null,\n  isAuth: false,\n  accessToken: \"\",\n  refreshToken: \"\"\n};\nconst AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ACCESS_TOKEN:\n      return {\n        ...state,\n        accessToken: action.accessToken\n      };\n    case SET_REFRESH_TOKEN:\n      return {\n        ...state,\n        refreshToken: action.refreshToken\n      };\n    case SET_AUTH_USER:\n    case GET_CAPTCHA_URL_SUCCESS:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case RESET_USER_AUTH_DATA:\n      return {\n        // ...state,\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n_c = AuthReducer;\nexport default AuthReducer;\nexport const authUser = () => {\n  return async dispatch => {\n    const refreshToken = localStorage.getItem(\"refreshToken\");\n    const response = await authAPI.authMe(refreshToken);\n    if (response.status === 200) {\n      dispatch(setAccessToken(response.data.access));\n      dispatch(setRefreshToken(response.data.refresh));\n      dispatch(getAauthUser());\n    }\n  };\n};\nexport const getAauthUser = () => {\n  return async dispatch => {\n    try {\n      const response = await authAPI.getAythUser();\n      if (response.status === 200) {\n        let {\n          username,\n          first_name,\n          last_name,\n          email\n        } = response.data.data;\n        dispatch(setAuthUser(username, first_name, last_name, email, true));\n      }\n    } catch (error) {\n      console.log('Get user error:', error);\n    }\n  };\n};\nexport const register = (username, first_name, last_name, email, password, setStatus) => {\n  return async dispatch => {\n    const response = await authAPI.registerUser(username, first_name, last_name, email, password);\n    if (response.status === 201) {\n      dispatch(login(username, password, setStatus));\n    } else {\n      setStatus(response.data.email[0]);\n    }\n  };\n};\nexport const login = (username, password, setStatus) => {\n  return async dispatch => {\n    const response = await authAPI.loginUser(username, password);\n    console.log('Что то тут', response.data.detail);\n    if (response.status === 200) {\n      dispatch(setAccessToken(response.data.access));\n      dispatch(setRefreshToken(response.data.refresh));\n      localStorage.setItem(\"refreshToken\", response.data.refresh);\n      dispatch(getAauthUser());\n    } else if (response.status === 401) {\n      console.log(response);\n      setStatus(response.detail);\n    }\n  };\n};\nexport const logout = () => {\n  return async dispatch => {\n    try {\n      const response = await authAPI.logout();\n      if (response.data.resultCode === 0) {\n        dispatch(resetAuthDataAC());\n        setAccessToken(\"\");\n        setRefreshToken(\"\");\n      }\n    } catch (error) {\n      // Обработка ошибок при выходе\n      console.error('Logout error:', error);\n    }\n  };\n};\n\n//Вывод стрелочной ф-и без return возможен, если функция только возвращает обьекты, после => нужно обернуть в ()\nexport const setAuthUser = (username, first_name, last_name, email, isAuth) => ({\n  type: SET_AUTH_USER,\n  payload: {\n    username,\n    first_name,\n    last_name,\n    email,\n    isAuth\n  }\n});\nexport const getCaptchaUrlSuccess = captchaUrl => ({\n  type: GET_CAPTCHA_URL_SUCCESS,\n  payload: {\n    captchaUrl\n  }\n});\nexport const resetAuthDataAC = () => {\n  return {\n    type: RESET_USER_AUTH_DATA\n  };\n};\nexport const setAccessToken = accessToken => ({\n  type: SET_ACCESS_TOKEN,\n  accessToken\n});\nexport const setRefreshToken = refreshToken => ({\n  type: SET_REFRESH_TOKEN,\n  refreshToken\n});\nvar _c;\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"names":["authAPI","SET_AUTH_USER","RESET_USER_AUTH_DATA","GET_CAPTCHA_URL_SUCCESS","SET_ACCESS_TOKEN","SET_REFRESH_TOKEN","initialState","username","loglast_name","last_name","email","isAuth","accessToken","refreshToken","AuthReducer","state","action","type","payload","_c","authUser","dispatch","localStorage","getItem","response","authMe","status","setAccessToken","data","access","setRefreshToken","refresh","getAauthUser","getAythUser","first_name","setAuthUser","error","console","log","register","password","setStatus","registerUser","login","loginUser","detail","setItem","logout","resultCode","resetAuthDataAC","getCaptchaUrlSuccess","captchaUrl","$RefreshReg$"],"sources":["/home/dima_protasevich/Documents/PycharmProjects/student_app_test/frontend/src/reduser/auth-reduser.js"],"sourcesContent":["import authAPI from \"../api/api.js\";\n\nconst SET_AUTH_USER = \"SET_AUTH_USER\"\nconst RESET_USER_AUTH_DATA = \"RESET_USER_AUTH_DATA\"\nconst GET_CAPTCHA_URL_SUCCESS = \"GET_CAPTCHA_URL_SUCCESS\"\nconst SET_ACCESS_TOKEN = \"SET_ACCESS_TOKEN\";\nconst SET_REFRESH_TOKEN = \"SET_REFRESH_TOKEN\";\n\n\nlet initialState = {\n  username: null,\n  loglast_name: null,\n  last_name: null,\n  email: null,\n  isAuth: false,\n  accessToken: \"\",\n  refreshToken: \"\",\n};\n\nconst AuthReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case SET_ACCESS_TOKEN:\n            return {\n                ...state,\n                accessToken: action.accessToken\n            }\n        \n        case SET_REFRESH_TOKEN:\n            return {\n              ...state,\n              refreshToken: action.refreshToken\n            };\n\n        case SET_AUTH_USER:\n        case GET_CAPTCHA_URL_SUCCESS:\n            return {\n                ...state, \n                ...action.payload\n                }\n\n        case RESET_USER_AUTH_DATA:\n            return {\n                // ...state,\n                ...initialState\n            }\n        \n        default:\n            return state\n    }\n}\n\nexport default AuthReducer\n\n\nexport const authUser = () => {\n    return async (dispatch) => {\n        const refreshToken = localStorage.getItem(\"refreshToken\");\n        const response = await authAPI.authMe(refreshToken);\n        if (response.status === 200) {\n            dispatch(setAccessToken(response.data.access));\n            dispatch(setRefreshToken(response.data.refresh));\n            dispatch(getAauthUser());\n        }\n    };\n};\n\n\nexport const getAauthUser = () => {\n    return async (dispatch) => {\n      try {\n        const response = await authAPI.getAythUser();\n        if (response.status === 200) {\n          let { username, first_name, last_name, email } = response.data.data;\n          dispatch(setAuthUser(username, first_name, last_name, email, true));\n        }\n      } catch (error) {\n        console.log('Get user error:', error)\n      }\n    };\n};\n\n\nexport const register = (username, first_name, last_name, email, password, setStatus) => {\n    return async (dispatch) => {\n        const response = await authAPI.registerUser(\n          username,\n          first_name,\n          last_name,\n          email,\n          password\n        );\n        if (response.status === 201) {\n            dispatch(login(username, password, setStatus));\n        } else {\n            setStatus(response.data.email[0]);\n        }\n    }\n}\n\n\nexport const login = (username, password, setStatus) => {\n  return async (dispatch) => {\n    const response = await authAPI.loginUser(username, password);\n    console.log('Что то тут', response.data.detail)\n    if (response.status === 200) {\n\n        dispatch(setAccessToken(response.data.access));\n        dispatch(setRefreshToken(response.data.refresh));\n        localStorage.setItem(\"refreshToken\", response.data.refresh);\n        dispatch(getAauthUser());\n    } else if (response.status === 401) {\n        console.log(response)\n        setStatus(response.detail);\n    }\n  };\n};\n\nexport const logout = () => {\n    return async (dispatch) => {\n        try {\n            const response = await authAPI.logout();\n            if (response.data.resultCode === 0) {\n                dispatch(resetAuthDataAC());\n                setAccessToken(\"\");\n                setRefreshToken(\"\");\n            }\n        } catch (error) {\n            // Обработка ошибок при выходе\n            console.error('Logout error:', error);\n        }\n    };\n};\n\n\n\n//Вывод стрелочной ф-и без return возможен, если функция только возвращает обьекты, после => нужно обернуть в ()\nexport const setAuthUser = (username, first_name, last_name, email, isAuth) => ({ type: SET_AUTH_USER, payload: {username, first_name, last_name, email, isAuth} })\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({ type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl} })\nexport const resetAuthDataAC = () => {return { type: RESET_USER_AUTH_DATA }}\nexport const setAccessToken = (accessToken) => ({type: SET_ACCESS_TOKEN, accessToken})\nexport const setRefreshToken = (refreshToken) => ({type: SET_REFRESH_TOKEN, refreshToken})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
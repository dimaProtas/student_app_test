{"ast":null,"code":"import axios from \"axios\";\nimport { selectAccessToken } from \"../reduser/selectors.js\";\nlet store;\nexport const setStore = s => {\n  store = s;\n};\nexport const instans = axios.create({\n  withCredentials: true,\n  // baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  // headers: {'API-KEY': '326b0522-c61e-4d4e-a7df-aae77c6de2db'}\n  baseURL: 'http://127.0.0.1:8000/api/'\n});\nexport const configureAxiosInterceptors = () => {\n  // Добавляем interceptor для автоматического добавления токена в заголовок запроса\n  instans.interceptors.request.use(config => {\n    const token = selectAccessToken(store.getState()); // Получаем токен из localStorage\n    // const refreshToken = localStorage.getItem('refreshToken'); // Получаем токен из localStorage\n    console.log(\"Access token retrieved from localStorage:\", `Bearer ${token}`);\n    // console.log('refreshToken', `Bearer ${refreshToken}`);\n    if (token) {\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n};\nexport const dataAPI = {\n  getStudent() {\n    return instans.get(`students/`);\n  },\n  getCurses() {\n    return instans.get(`curses/`);\n  }\n};\nconst authAPI = {\n  authMe() {\n    return instans.get(`user/`);\n  },\n  registerUser(fullName, login, email, password, repidPassword) {\n    let result = instans.post(`register/`, {\n      full_name: fullName,\n      username: login,\n      email,\n      password,\n      repidPassword\n    });\n    return result;\n  },\n  loginUser(username, password) {\n    // console.log(email, password)\n    let result = instans.post(\"token/obtain/\", {\n      username,\n      password\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(\"Posle:\", result.data);\n    return result;\n  },\n  logout() {\n    return instans.delete(\"auth/logout/\");\n  },\n  refreshToken(refreshToken) {\n    let result = instans.post(\"token/refresh/\", {\n      refresh: refreshToken\n    });\n    return result;\n  }\n};\nexport default authAPI;","map":{"version":3,"names":["axios","selectAccessToken","store","setStore","s","instans","create","withCredentials","baseURL","configureAxiosInterceptors","interceptors","request","use","config","token","getState","console","log","headers","error","Promise","reject","dataAPI","getStudent","get","getCurses","authAPI","authMe","registerUser","fullName","login","email","password","repidPassword","result","post","full_name","username","loginUser","data","logout","delete","refreshToken","refresh"],"sources":["/home/dima_protasevich/Documents/PycharmProjects/student_app_test/frontend/src/api/api.js"],"sourcesContent":["import axios from \"axios\";\nimport { selectAccessToken } from \"../reduser/selectors.js\";\n\nlet store;\n\nexport const setStore = (s) => {\n  store = s;\n};\n\nexport const instans = axios.create({\n    withCredentials: true,\n    // baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    // headers: {'API-KEY': '326b0522-c61e-4d4e-a7df-aae77c6de2db'}\n    baseURL: 'http://127.0.0.1:8000/api/'\n})\n\n\nexport const configureAxiosInterceptors = () => {\n  // Добавляем interceptor для автоматического добавления токена в заголовок запроса\n  instans.interceptors.request.use(\n    (config) => {\n      const token = selectAccessToken(store.getState()); // Получаем токен из localStorage\n      // const refreshToken = localStorage.getItem('refreshToken'); // Получаем токен из localStorage\n      console.log(\n        \"Access token retrieved from localStorage:\",\n        `Bearer ${token}`\n      );\n      // console.log('refreshToken', `Bearer ${refreshToken}`);\n      if (token) {\n        config.headers[\"Authorization\"] = `Bearer ${token}`;\n      }\n\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n};\n\nexport const dataAPI = {\n\n  getStudent() {\n    return instans.get(`students/`)\n  },\n\n  getCurses() {\n    return instans.get(`curses/`)\n  }\n\n\n}\n\n\nconst authAPI = {\n  \n  authMe() {\n    return instans.get(`user/`);\n  },\n\n  registerUser(fullName, login, email, password, repidPassword) {\n    let result = instans.post(`register/`, {\n      full_name: fullName,\n      username: login,\n      email,\n      password,\n      repidPassword,\n    });\n    return result;\n  },\n\n  loginUser(username, password) {\n    // console.log(email, password)\n    let result = instans.post(\n      \"token/obtain/\",\n      { username, password },\n      { headers: { \"Content-Type\": \"application/json\" } }\n    );\n    console.log(\"Posle:\", result.data);\n    return result;\n  },\n\n  logout() {\n    return instans.delete(\"auth/logout/\");\n  },\n\n  refreshToken(refreshToken) {\n    let result = instans.post(\"token/refresh/\", { refresh: refreshToken });\n    return result;\n  },\n}; \n\n\n\n\n\nexport default authAPI\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,QAAQ,yBAAyB;AAE3D,IAAIC,KAAK;AAET,OAAO,MAAMC,QAAQ,GAAIC,CAAC,IAAK;EAC7BF,KAAK,GAAGE,CAAC;AACX,CAAC;AAED,OAAO,MAAMC,OAAO,GAAGL,KAAK,CAACM,MAAM,CAAC;EAChCC,eAAe,EAAE,IAAI;EACrB;EACA;EACAC,OAAO,EAAE;AACb,CAAC,CAAC;AAGF,OAAO,MAAMC,0BAA0B,GAAGA,CAAA,KAAM;EAC9C;EACAJ,OAAO,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC7BC,MAAM,IAAK;IACV,MAAMC,KAAK,GAAGb,iBAAiB,CAACC,KAAK,CAACa,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD;IACAC,OAAO,CAACC,GAAG,CACT,2CAA2C,EAC1C,UAASH,KAAM,EAClB,CAAC;IACD;IACA,IAAIA,KAAK,EAAE;MACTD,MAAM,CAACK,OAAO,CAAC,eAAe,CAAC,GAAI,UAASJ,KAAM,EAAC;IACrD;IAEA,OAAOD,MAAM;EACf,CAAC,EACAM,KAAK,IAAK;IACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B,CACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,OAAO,GAAG;EAErBC,UAAUA,CAAA,EAAG;IACX,OAAOlB,OAAO,CAACmB,GAAG,CAAE,WAAU,CAAC;EACjC,CAAC;EAEDC,SAASA,CAAA,EAAG;IACV,OAAOpB,OAAO,CAACmB,GAAG,CAAE,SAAQ,CAAC;EAC/B;AAGF,CAAC;AAGD,MAAME,OAAO,GAAG;EAEdC,MAAMA,CAAA,EAAG;IACP,OAAOtB,OAAO,CAACmB,GAAG,CAAE,OAAM,CAAC;EAC7B,CAAC;EAEDI,YAAYA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,EAAE;IAC5D,IAAIC,MAAM,GAAG7B,OAAO,CAAC8B,IAAI,CAAE,WAAU,EAAE;MACrCC,SAAS,EAAEP,QAAQ;MACnBQ,QAAQ,EAAEP,KAAK;MACfC,KAAK;MACLC,QAAQ;MACRC;IACF,CAAC,CAAC;IACF,OAAOC,MAAM;EACf,CAAC;EAEDI,SAASA,CAACD,QAAQ,EAAEL,QAAQ,EAAE;IAC5B;IACA,IAAIE,MAAM,GAAG7B,OAAO,CAAC8B,IAAI,CACvB,eAAe,EACf;MAAEE,QAAQ;MAAEL;IAAS,CAAC,EACtB;MAAEd,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAAE,CACpD,CAAC;IACDF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEiB,MAAM,CAACK,IAAI,CAAC;IAClC,OAAOL,MAAM;EACf,CAAC;EAEDM,MAAMA,CAAA,EAAG;IACP,OAAOnC,OAAO,CAACoC,MAAM,CAAC,cAAc,CAAC;EACvC,CAAC;EAEDC,YAAYA,CAACA,YAAY,EAAE;IACzB,IAAIR,MAAM,GAAG7B,OAAO,CAAC8B,IAAI,CAAC,gBAAgB,EAAE;MAAEQ,OAAO,EAAED;IAAa,CAAC,CAAC;IACtE,OAAOR,MAAM;EACf;AACF,CAAC;AAMD,eAAeR,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
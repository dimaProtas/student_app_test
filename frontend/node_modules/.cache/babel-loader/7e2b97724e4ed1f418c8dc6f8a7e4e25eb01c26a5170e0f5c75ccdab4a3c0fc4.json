{"ast":null,"code":"import { dataAPI } from \"../api/api.js\";\nconst SET_STUDENTS = \"SET_STUDENTS\";\nconst SET_CURSES = \"SET_CURSES\";\nconst SET_SEMESTER = \"SET_SEMESTER\";\nlet initialState = {\n  students: [],\n  curses: [],\n  semester: []\n};\nconst DataReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SEMESTER:\n      return {\n        ...state,\n        semester: [...action.semester]\n      };\n    case SET_CURSES:\n      return {\n        ...state,\n        curses: [...action.curses]\n      };\n    case SET_STUDENTS:\n      return {\n        ...state,\n        students: [...action.students]\n      };\n    default:\n      return state;\n  }\n};\n_c = DataReduser;\nexport default DataReduser;\nexport const getSemester = () => {\n  return async dispatch => {\n    try {\n      const response = await dataAPI.getSemester();\n      if (response.status === 200) {\n        dispatch(setSemester(response.data));\n      }\n    } catch (error) {\n      console.log('Semester error:', error);\n    }\n  };\n};\nexport const getCurses = () => {\n  return async dispatch => {\n    try {\n      const response = await dataAPI.getCurses();\n      if (response.status === 200) {\n        dispatch(setCurses(response.data));\n      }\n    } catch (error) {\n      console.error(\"Curses error:\", error);\n    }\n  };\n};\nexport const getStudent = () => {\n  return async dispatch => {\n    try {\n      const response = await dataAPI.getStudent();\n      if (response.status === 200) {\n        dispatch(setStudent(response.data));\n      }\n    } catch (error) {\n      console.error(\"Student error:\", error);\n    }\n  };\n};\n\n//Вывод стрелочной ф-и без return возможен, если функция только возвращает обьекты, после => нужно обернуть в ()\nexport const setStudent = students => ({\n  type: SET_STUDENTS,\n  students\n});\nexport const setCurses = curses => ({\n  type: SET_CURSES,\n  curses\n});\nexport const setSemester = semester => ({\n  type: SET_SEMESTER,\n  semester\n});\nvar _c;\n$RefreshReg$(_c, \"DataReduser\");","map":{"version":3,"names":["dataAPI","SET_STUDENTS","SET_CURSES","SET_SEMESTER","initialState","students","curses","semester","DataReduser","state","action","type","_c","getSemester","dispatch","response","status","setSemester","data","error","console","log","getCurses","setCurses","getStudent","setStudent","$RefreshReg$"],"sources":["/home/dima_protasevich/Documents/PycharmProjects/student_app_test/frontend/src/reduser/data-reduser.js"],"sourcesContent":["import {dataAPI} from \"../api/api.js\";\n\nconst SET_STUDENTS = \"SET_STUDENTS\";\nconst SET_CURSES = \"SET_CURSES\";\nconst SET_SEMESTER = \"SET_SEMESTER\";\n\n\nlet initialState = {\n  students: [],\n  curses: [],\n  semester: [],\n};\n\nconst DataReduser = (state = initialState, action) => {\n  switch (action.type) {\n\n    case SET_SEMESTER:\n      return {\n        ...state,\n        semester: [...action.semester]\n      }\n\n    case SET_CURSES:\n        return{\n            ...state,\n            curses: [...action.curses]\n        }\n\n    case SET_STUDENTS:\n      return {\n        ...state,\n        students: [...action.students],\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default DataReduser;\n\n\nexport const getSemester = () => {\n  return async (dispatch) => {\n    try {\n      const response = await dataAPI.getSemester();\n      if (response.status === 200) {\n        dispatch(setSemester(response.data))\n      }\n    } catch (error) {\n      console.log('Semester error:', error)\n    }\n  }\n}\n\nexport const getCurses = () => {\n    return async (dispatch) => {\n      try {\n        const response = await dataAPI.getCurses();\n        if (response.status === 200) {\n          dispatch(setCurses(response.data));\n        }\n      } catch (error) {\n        console.error(\"Curses error:\", error);\n      }\n    }\n}\n\n\nexport const getStudent = () => {\n  return async (dispatch) => {\n    try {\n      const response = await dataAPI.getStudent();\n      if (response.status === 200) {\n        \n        dispatch(setStudent(response.data));\n      } \n    } catch (error) {\n      console.error(\"Student error:\", error);\n    }\n\n  };\n};\n\n\n\n\n//Вывод стрелочной ф-и без return возможен, если функция только возвращает обьекты, после => нужно обернуть в ()\nexport const setStudent = (students) => ({ type: SET_STUDENTS, students });\nexport const setCurses = (curses) => ({type: SET_CURSES, curses})\nexport const setSemester = (semester) => ({type: SET_SEMESTER, semester})\n\n"],"mappings":"AAAA,SAAQA,OAAO,QAAO,eAAe;AAErC,MAAMC,YAAY,GAAG,cAAc;AACnC,MAAMC,UAAU,GAAG,YAAY;AAC/B,MAAMC,YAAY,GAAG,cAAc;AAGnC,IAAIC,YAAY,GAAG;EACjBC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE,EAAE;EACVC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IAEjB,KAAKR,YAAY;MACf,OAAO;QACL,GAAGM,KAAK;QACRF,QAAQ,EAAE,CAAC,GAAGG,MAAM,CAACH,QAAQ;MAC/B,CAAC;IAEH,KAAKL,UAAU;MACX,OAAM;QACF,GAAGO,KAAK;QACRH,MAAM,EAAE,CAAC,GAAGI,MAAM,CAACJ,MAAM;MAC7B,CAAC;IAEL,KAAKL,YAAY;MACf,OAAO;QACL,GAAGQ,KAAK;QACRJ,QAAQ,EAAE,CAAC,GAAGK,MAAM,CAACL,QAAQ;MAC/B,CAAC;IAEH;MACE,OAAOI,KAAK;EAChB;AACF,CAAC;AAACG,EAAA,GAxBIJ,WAAW;AA0BjB,eAAeA,WAAW;AAG1B,OAAO,MAAMK,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,OAAO,CAACa,WAAW,CAAC,CAAC;MAC5C,IAAIE,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3BF,QAAQ,CAACG,WAAW,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACtC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,KAAK,CAAC;IACvC;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,SAAS,GAAGA,CAAA,KAAM;EAC3B,OAAO,MAAOR,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,OAAO,CAACsB,SAAS,CAAC,CAAC;MAC1C,IAAIP,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3BF,QAAQ,CAACS,SAAS,CAACR,QAAQ,CAACG,IAAI,CAAC,CAAC;MACpC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC;EACF,CAAC;AACL,CAAC;AAGD,OAAO,MAAMK,UAAU,GAAGA,CAAA,KAAM;EAC9B,OAAO,MAAOV,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,OAAO,CAACwB,UAAU,CAAC,CAAC;MAC3C,IAAIT,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAE3BF,QAAQ,CAACW,UAAU,CAACV,QAAQ,CAACG,IAAI,CAAC,CAAC;MACrC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC;EAEF,CAAC;AACH,CAAC;;AAKD;AACA,OAAO,MAAMM,UAAU,GAAIpB,QAAQ,KAAM;EAAEM,IAAI,EAAEV,YAAY;EAAEI;AAAS,CAAC,CAAC;AAC1E,OAAO,MAAMkB,SAAS,GAAIjB,MAAM,KAAM;EAACK,IAAI,EAAET,UAAU;EAAEI;AAAM,CAAC,CAAC;AACjE,OAAO,MAAMW,WAAW,GAAIV,QAAQ,KAAM;EAACI,IAAI,EAAER,YAAY;EAAEI;AAAQ,CAAC,CAAC;AAAA,IAAAK,EAAA;AAAAc,YAAA,CAAAd,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
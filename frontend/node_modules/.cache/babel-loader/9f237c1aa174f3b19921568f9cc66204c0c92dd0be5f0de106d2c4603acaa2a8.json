{"ast":null,"code":"import axios from \"axios\";\nimport { selectAccessToken } from \"../reduser/selectors.js\";\nlet store;\nexport const setStore = s => {\n  store = s;\n};\nconst axiosWithoutToken = axios.create({\n  baseURL: \"http://localhost:8000/api/\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport const instans = axios.create({\n  withCredentials: true,\n  baseURL: 'http://localhost:8000/api/'\n});\nexport const configureAxiosInterceptors = () => {\n  // Добавляем interceptor для автоматического добавления токена в заголовок запроса\n  instans.interceptors.request.use(config => {\n    const token = selectAccessToken(store.getState()); // Получаем токен из State\n    console.log(token);\n    if (token) {\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n};\nexport const dataAPI = {\n  deleteSemester(semester_id) {\n    return instans.delete(`semestr/${semester_id}/`);\n  },\n  deleteCurse(curse_id) {\n    return instans.delete(`curses/${curse_id}/`);\n  },\n  deleteStudent(student_id) {\n    return instans.delete(`students/${student_id}/`);\n  },\n  getTeachers(name_teacher, last_name_teacher, rank_teacher) {\n    return instans.get(`teachers/?name_teacher=${name_teacher}&last_name_teacher=${last_name_teacher}&rank_teacher=${rank_teacher}`);\n  },\n  postTeacher(name_teacher, last_name_teacher, rank_teacher, semester) {\n    return instans.post(`teachers/`, {\n      name_teacher,\n      last_name_teacher,\n      rank_teacher,\n      semester\n    });\n  },\n  getStudent(name, last_name) {\n    return instans.get(`students/?name=${name}&last_name=${last_name}`);\n  },\n  postStudent(name, last_name) {\n    return instans.post(`students/`, {\n      name,\n      last_name\n    });\n  },\n  getCurses(name_curses, num_curses) {\n    return instans.get(`curses/?name_curses=${name_curses}&num_curses=${num_curses}`);\n  },\n  postCurse(name_curses, num_curses) {\n    return instans.post(`curses/`, {\n      name_curses,\n      num_curses\n    });\n  },\n  getSemester() {\n    return instans.get(`semestr/`);\n  },\n  getSemesterCurses() {\n    return instans.get(`semester_curses/`);\n  }\n};\nconst authAPI = {\n  authMe(refreshToken) {\n    let result = instans.post(`token/refresh/`, {\n      refresh: refreshToken\n    });\n    return result;\n  },\n  getAythUser() {\n    return instans.get(`user/`);\n  },\n  registerUser(username, first_name, last_name, email, password) {\n    let result = axiosWithoutToken.post(`register/`, {\n      username,\n      first_name,\n      last_name,\n      email,\n      password\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return result;\n  },\n  loginUser(username, password) {\n    let result = instans.post(\"token/obtain/\", {\n      username,\n      password\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return result;\n  },\n  logout() {\n    return instans.delete(\"auth/logout/\");\n  },\n  refreshToken(refreshToken) {\n    let result = instans.post(\"token/refresh/\", {\n      refresh: refreshToken\n    });\n    return result;\n  }\n};\nexport default authAPI;","map":{"version":3,"names":["axios","selectAccessToken","store","setStore","s","axiosWithoutToken","create","baseURL","headers","instans","withCredentials","configureAxiosInterceptors","interceptors","request","use","config","token","getState","console","log","error","Promise","reject","dataAPI","deleteSemester","semester_id","delete","deleteCurse","curse_id","deleteStudent","student_id","getTeachers","name_teacher","last_name_teacher","rank_teacher","get","postTeacher","semester","post","getStudent","name","last_name","postStudent","getCurses","name_curses","num_curses","postCurse","getSemester","getSemesterCurses","authAPI","authMe","refreshToken","result","refresh","getAythUser","registerUser","username","first_name","email","password","loginUser","logout"],"sources":["/home/dima_protasevich/Documents/PycharmProjects/student_app_test/frontend/src/api/api.js"],"sourcesContent":["import axios from \"axios\";\nimport { selectAccessToken } from \"../reduser/selectors.js\";\n\nlet store;\n\nexport const setStore = (s) => {\n  store = s;\n};\n\nconst axiosWithoutToken = axios.create({\n  baseURL: \"http://localhost:8000/api/\",\n  headers: { \"Content-Type\": \"application/json\" },\n});\n\nexport const instans = axios.create({\n    withCredentials: true,\n    baseURL: 'http://localhost:8000/api/'\n})\n\n\nexport const configureAxiosInterceptors = () => {\n  // Добавляем interceptor для автоматического добавления токена в заголовок запроса\n  instans.interceptors.request.use(\n    (config) => {\n      const token = selectAccessToken(store.getState()); // Получаем токен из State\n      console.log(token)\n      if (token) {\n        config.headers[\"Authorization\"] = `Bearer ${token}`;\n      }\n\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n};\n\nexport const dataAPI = {\n  deleteSemester(semester_id) {\n    return instans.delete(`semestr/${semester_id}/`);\n  },\n\n  deleteCurse(curse_id) {\n    return instans.delete(`curses/${curse_id}/`);\n  },\n\n  deleteStudent(student_id) {\n    return instans.delete(`students/${student_id}/`);\n  },\n\n  getTeachers(name_teacher, last_name_teacher, rank_teacher) {\n    return instans.get(\n      `teachers/?name_teacher=${name_teacher}&last_name_teacher=${last_name_teacher}&rank_teacher=${rank_teacher}`\n    );\n  },\n\n  postTeacher(name_teacher, last_name_teacher, rank_teacher, semester) {\n    return instans.post(`teachers/`, {\n      name_teacher,\n      last_name_teacher,\n      rank_teacher,\n      semester,\n    });\n  },\n\n  getStudent(name, last_name) {\n    return instans.get(`students/?name=${name}&last_name=${last_name}`);\n  },\n\n  postStudent(name, last_name) {\n    return instans.post(`students/`, { name, last_name });\n  },\n\n  getCurses(name_curses, num_curses) {\n    return instans.get(\n      `curses/?name_curses=${name_curses}&num_curses=${num_curses}`\n    );\n  },\n\n  postCurse(name_curses, num_curses) {\n    return instans.post(`curses/`, { name_curses, num_curses });\n  },\n\n  getSemester() {\n    return instans.get(`semestr/`);\n  },\n\n  getSemesterCurses() {\n    return instans.get(`semester_curses/`);\n  },\n};\n\n\nconst authAPI = {\n  authMe(refreshToken) {\n    let result = instans.post(`token/refresh/`, { refresh: refreshToken });\n    return result;\n  },\n\n  getAythUser() {\n    return instans.get(`user/`);\n  },\n\n  registerUser(username, first_name, last_name, email, password) {\n    let result = axiosWithoutToken.post(\n      `register/`,\n      {\n        username,\n        first_name,\n        last_name,\n        email,\n        password,\n      },\n      { headers: { \"Content-Type\": \"application/json\" } }\n    );\n    return result;\n  },\n\n  loginUser(username, password) {\n    let result = instans.post(\n      \"token/obtain/\",\n      { username, password },\n      { headers: { \"Content-Type\": \"application/json\" } }\n    );\n    return result;\n  },\n\n  logout() {\n    return instans.delete(\"auth/logout/\");\n  },\n\n  refreshToken(refreshToken) {\n    let result = instans.post(\"token/refresh/\", { refresh: refreshToken });\n    return result;\n  },\n}; \n\n\n\n\n\nexport default authAPI\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { dataAPI } from \"../api/api.js\";\nconst SET_STUDENTS = \"SET_STUDENTS\";\nlet initialState = {\n  students: [],\n  curses: []\n};\nconst StudentReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_STUDENTS:\n      return {\n        ...state,\n        students: [...action.students]\n      };\n    default:\n      return state;\n  }\n};\n_c = StudentReduser;\nexport default StudentReduser;\nexport const getStudent = () => {\n  return async dispatch => {\n    const response = await dataAPI.getStudent();\n    console.log(response);\n    if (response.status === 200) {\n      dispatch(setStudent(response.data));\n    }\n  };\n};\n\n//Вывод стрелочной ф-и без return возможен, если функция только возвращает обьекты, после => нужно обернуть в ()\nexport const setStudent = students => ({\n  type: SET_STUDENTS,\n  students\n});\nvar _c;\n$RefreshReg$(_c, \"StudentReduser\");","map":{"version":3,"names":["dataAPI","SET_STUDENTS","initialState","students","curses","StudentReduser","state","action","type","_c","getStudent","dispatch","response","console","log","status","setStudent","data","$RefreshReg$"],"sources":["/home/dima_protasevich/Documents/PycharmProjects/student_app_test/frontend/src/reduser/data-reduser.js"],"sourcesContent":["import {dataAPI} from \"../api/api.js\";\n\nconst SET_STUDENTS = \"SET_STUDENTS\";\n\n\n\nlet initialState = {\n  students: [],\n  curses: [],\n};\n\nconst StudentReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_STUDENTS:\n      return {\n        ...state,\n        students: [...action.students],\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default StudentReduser;\n\n\n\nexport const getStudent = () => {\n  return async (dispatch) => {\n    const response = await dataAPI.getStudent();\n    console.log(response)\n    if (response.status === 200) {\n      dispatch(setStudent(response.data));\n    } \n  };\n};\n\n\n\n\n//Вывод стрелочной ф-и без return возможен, если функция только возвращает обьекты, после => нужно обернуть в ()\nexport const setStudent = (students) => ({ type: SET_STUDENTS, students });\n\n"],"mappings":"AAAA,SAAQA,OAAO,QAAO,eAAe;AAErC,MAAMC,YAAY,GAAG,cAAc;AAInC,IAAIC,YAAY,GAAG;EACjBC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EACvD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKP,YAAY;MACf,OAAO;QACL,GAAGK,KAAK;QACRH,QAAQ,EAAE,CAAC,GAAGI,MAAM,CAACJ,QAAQ;MAC/B,CAAC;IAEH;MACE,OAAOG,KAAK;EAChB;AACF,CAAC;AAACG,EAAA,GAXIJ,cAAc;AAapB,eAAeA,cAAc;AAI7B,OAAO,MAAMK,UAAU,GAAGA,CAAA,KAAM;EAC9B,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,QAAQ,GAAG,MAAMZ,OAAO,CAACU,UAAU,CAAC,CAAC;IAC3CG,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrB,IAAIA,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;MAC3BJ,QAAQ,CAACK,UAAU,CAACJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACrC;EACF,CAAC;AACH,CAAC;;AAKD;AACA,OAAO,MAAMD,UAAU,GAAIb,QAAQ,KAAM;EAAEK,IAAI,EAAEP,YAAY;EAAEE;AAAS,CAAC,CAAC;AAAC,IAAAM,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/dima_protasevich/Documents/PycharmProjects/student_app_test/frontend/src/Component/LoginForm/LoginForm.jsx\";\nimport React from \"react\";\nimport style from './LoginForm.module.css';\nimport { connect } from 'react-redux';\nimport { login } from '../../reduser/auth-reduser.js';\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from 'yup';\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupSchema = Yup.object().shape({\n  username: Yup.string().min(2, 'Too Short!').max(100, 'Too Long!').required('Required'),\n  password: Yup.string().min(2, 'Too Short!').max(100, 'Too Long!').required('Required')\n});\nexport const LoginForm = ({\n  login,\n  captchaUrl\n}) => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    onSubmit: async (values, {\n      setSubmitting,\n      setStatus\n    }) => {\n      // await new Promise((resolve) => setTimeout(resolve, 500));\n      // alert(JSON.stringify(values, null, 2));\n      // login(values.login, values.password, values.rememberMe, values.captcha, setStatus)\n      login(values.username, values.password, setStatus);\n      // console.log(values.login, values.password)\n      setSubmitting(false);\n    },\n    validationSchema: SignupSchema,\n    children: ({\n      errors,\n      touched,\n      status\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.myForm,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: errors.username && touched.username ? style.errors : null,\n          children: [errors.username && touched.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this) : null, /*#__PURE__*/_jsxDEV(Field, {\n            placeholder: 'Username',\n            name: 'username',\n            type: 'input'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: errors.password && touched.password ? style.errors : null,\n          children: [errors.password && touched.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this) : null, /*#__PURE__*/_jsxDEV(Field, {\n            placeholder: 'Password',\n            name: 'password',\n            type: 'password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n// const LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n_c = LoginForm;\nexport const Login = ({\n  login,\n  isAuth,\n  captchaUrl\n}) => {\n  if (isAuth === true) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: style.login,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n      login: login,\n      captchaUrl: captchaUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Login;\nconst mapStateToProps = state => ({\n  // captchaUrl: state.auth.captchaUrl,\n  isAuth: state.auth.isAuth\n});\nexport default connect(mapStateToProps, {\n  login\n})(Login);\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"names":["React","style","connect","login","Formik","Field","Form","Yup","Navigate","jsxDEV","_jsxDEV","SignupSchema","object","shape","username","string","min","max","required","password","LoginForm","captchaUrl","initialValues","onSubmit","values","setSubmitting","setStatus","validationSchema","children","errors","touched","status","className","myForm","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","name","type","_c","Login","isAuth","to","_c2","mapStateToProps","state","auth","$RefreshReg$"],"sources":["/home/dima_protasevich/Documents/PycharmProjects/student_app_test/frontend/src/Component/LoginForm/LoginForm.jsx"],"sourcesContent":["import React from \"react\";\nimport style from './LoginForm.module.css';\nimport { connect } from 'react-redux';\nimport { login } from '../../reduser/auth-reduser.js';\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from 'yup';\nimport { Navigate } from \"react-router-dom\";\n\n\nconst SignupSchema = Yup.object().shape({\n    username: Yup.string()\n        .min(2, 'Too Short!')\n        .max(100, 'Too Long!')\n        .required('Required'),\n    password: Yup.string()\n        .min(2, 'Too Short!')\n        .max(100, 'Too Long!')\n        .required('Required'),\n});\n\n\nexport const LoginForm = ({login, captchaUrl}) => {\n    return (\n        <Formik\n            initialValues={{ username: \"\", password: \"\"}}\n            onSubmit={async (values, { setSubmitting, setStatus }) => {\n                // await new Promise((resolve) => setTimeout(resolve, 500));\n                // alert(JSON.stringify(values, null, 2));\n                // login(values.login, values.password, values.rememberMe, values.captcha, setStatus)\n                login(values.username, values.password, setStatus)\n                // console.log(values.login, values.password)\n                setSubmitting(false);\n                \n            }}\n            validationSchema={SignupSchema}\n        >\n            {({ errors, touched, status }) => (\n                <div className={style.myForm}>\n                    <Form>\n                        <div className={errors.username && touched.username ? style.errors : null}>\n                            {errors.username && touched.username ? (\n                                <div>{errors.username}</div>\n                            ) : null}\n                            <Field placeholder={'Username'} name={'username'} type={'input'} />\n                        </div>\n                        <div className={errors.password && touched.password ? style.errors : null}>\n                            {errors.password && touched.password ? (\n                                <div>{errors.password}</div>\n                            ) : null}\n                            <Field placeholder={'Password'} name={'password'} type={'password'} />\n                        </div>\n                        <div>\n                            <button type=\"submit\">Login</button>\n                        </div>\n                        \n                    </Form>\n                </div>\n\n            )}\n        </Formik>\n    )\n}\n\n// const LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\n\nexport const Login = ({login, isAuth, captchaUrl}) => {\n\n    if (isAuth === true) {\n        return <Navigate to={\"/profile\"} />\n    }\n\n    return (\n        <div>\n            <h1 className={style.login}>Login</h1>\n            <LoginForm login={login} captchaUrl={captchaUrl} />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    // captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}